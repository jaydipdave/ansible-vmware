---
- name: "PROVISION | Check if IP in use"
  wait_for:
    host: "{{ vm_ip }}"
    port: 5986
    delay: 1
    timeout: 5
  ignore_errors: true
  register: ip_exists_win

- name: "PROVISION | Check if IP in use"
  wait_for:
    host: "{{ vm_ip }}"
    port: 22
    delay: 1
    timeout: 5
  ignore_errors: true
  register: ip_exists_linux

- name: Failing if the machine already exists
  fail: 
    msg: Machine is running, not a good idea to continue.
  when: (ip_exists_linux.msg is defined) and (ip_exists_win.msg is defined)

- name: "PROVISION | Create VM from template"
  vmware_guest:      
    validate_certs: false
    hostname: "{{ vcenter_host }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ datacenter }}"
    cluster: "{{ cluster }}"
    resource_pool: "{{ resource_pool }}"
    name: "{{ vm_name }}"
    template: "{{ vm_template }}"
    state: poweredon
    hardware:
      num_cpus: "{{ cpu }}"
      memory_mb: "{{ mem_mb }}"
    disk:
      - size_gb: "{{ primary_disk }}"
        type: thin
        datastore: "{{ primary_datastore }}"
      - size_gb: "{{ data_disk }}"
        type: thin
        datastore: "{{ data_datastore }}"
    networks:
      - name: "{{ vm_network_port_group }}"
        ip: "{{ vm_ip }}"
        netmask: "{{ vm_netmask }}"
        gateway: "{{ vm_gateway }}"
        domain: "{{ vm_dns_domain }}"
        dns_servers:
        - "{{ vm_dns_server1 }}"
        - "{{ vm_dns_server2 }}"
    customization:
      autologon: true
      domain:  "{{ vm_dns_domain }}"
      password: "{{ vm_new_password }}"
      domainadmin: "{{ ad_domain_username }}"
      domainadminpassword: "{{ ad_domain_password }}"
      joindomain: "{{ ad_domain }}"
      timezone: "{{ default_vm_time_zone }}"
      dns_servers:
        - "{{ vm_dns_server1 }}"
        - "{{ vm_dns_server2 }}"
      runonce:
        - powershell.exe -ExecutionPolicy Unrestricted -File C:\temp\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP
        - winrm set winrm/config/service/auth @{Basic="true"}
        - Set-Item -Path WSMan:\localhost\Service\Auth\Basic -Value $true
        - powershell Get-Disk | Where partitionstyle -eq 'raw' | Initialize-Disk -PartitionStyle GPT -PassThru | New-Partition -AssignDriveLetter -UseMaximumSize | Format-Volume -FileSystem NTFS -Confirm:$false
        - Set-ItemProperty -Path HKLM:\Software\Microsoft\Windows\CurrentVersion\policies\system\ -Name legalnoticecaption -Value "{{ legal_notice_title }}"
        - Set-ItemProperty -Path HKLM:\Software\Microsoft\Windows\CurrentVersion\policies\system\ -Name legalnoticetext -Value "{{ legal_notice_text }}"
  register: newvm
  when: (ip_exists_linux.msg is defined) and (ip_exists_win.msg is defined)

- name: "PROVISION | Wait for start up tasks to complete"
  wait_for:
    host: "{{ vm_ip }}"
    port: 5986
    delay: 120
    timeout: 1200
  when: newvm.changed and os=="win"

- name: "PROVISION | Sleep for 120 seconds while disk formats and run once scripts execute"
  wait_for: timeout=120
  when: newvm.changed 


